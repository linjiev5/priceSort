/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.File;
import java.io.FileWriter;
import java.text.SimpleDateFormat;

import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import jdbc.DataConnection;
import object.DataNow;

/**
 *
 * @author user
 */
public class ShowData extends javax.swing.JFrame {

    /**
     * Creates new form ShowData
     */
    public ShowData() {
        initComponents();
        showDataNow();
        reFormatCombox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        showResult = new javax.swing.JTable();
        searchKey = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        showAllData = new javax.swing.JButton();
        csvOut = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        dataGet = new javax.swing.JButton();
        site = new javax.swing.JComboBox<>();
        showTitle = new javax.swing.JLabel();
        showPrice = new javax.swing.JLabel();
        showImg = new javax.swing.JLabel();
        showCreateTime = new javax.swing.JLabel();
        showMessage = new javax.swing.JLabel();
        sizeSet = new javax.swing.JLabel();
        historyData = new javax.swing.JButton();
        deleteData = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        showID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        showResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "サイト", "商品名", "価格", "img", "作成時間"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        showResult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showResultMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(showResult);

        searchKey.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        searchKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchKeyActionPerformed(evt);
            }
        });

        jButton1.setText("検索");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        showAllData.setText("一覧");
        showAllData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllDataActionPerformed(evt);
            }
        });

        csvOut.setText("CSV作成");
        csvOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csvOutActionPerformed(evt);
            }
        });

        jLabel1.setText("商品名");

        jLabel2.setText("作成時間");

        jLabel3.setText("価格");

        jLabel4.setText("img");

        jButton4.setText("安い順");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("高い順");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        dataGet.setText("データ取得");
        dataGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataGetActionPerformed(evt);
            }
        });

        site.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        site.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siteActionPerformed(evt);
            }
        });

        sizeSet.setText("サイトの選択");

        historyData.setText("過去の履歴");
        historyData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyDataActionPerformed(evt);
            }
        });

        deleteData.setText("データを削除");
        deleteData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDataActionPerformed(evt);
            }
        });

        jLabel5.setText("id");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(showTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(showPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(showCreateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(showImg, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(42, 42, 42)
                                        .addComponent(showID, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(showMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deleteData, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(site, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(sizeSet, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(showAllData, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchKey, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5)))
                        .addGap(12, 12, 12)
                        .addComponent(historyData, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(csvOut, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dataGet)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 26, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(showAllData)
                            .addComponent(csvOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dataGet)
                            .addComponent(site, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sizeSet)
                            .addComponent(historyData))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchKey, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(10, 10, 10))))
                            .addComponent(showID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(showTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(showPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(showImg, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(showCreateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(deleteData)
                        .addGap(5, 5, 5)
                        .addComponent(showMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchKeyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String key = searchKey.getText().trim();
        //　検索するキーワードを変数keyにする
        DefaultTableModel model = (DefaultTableModel) showResult.getModel();
        //　何も入力してない場合
        if (key.isEmpty()) {
            JOptionPane.showMessageDialog(this, "検索するキーワードを入力してください");
            // 改めてデータを表示する
            showDataNow();
        } else {
            //　すべてのデータをテーブルにクリアする
            model.setRowCount(0);
            // 検索するsqlqueryを設定する
            String query = "select * from yahooSearchResultNow  WHERE keys LIKE '%" + key + "%';";
            DataConnection dc = new DataConnection();
            ArrayList<DataNow> d = dc.getDataNow(query);
            showDataToModel(d);
            showMessage.setText(key + " を検索した結果です");

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        String key = searchKey.getText().trim();
        String query = null;
        //　検索するキーワードを変数keyにする
        DefaultTableModel model = (DefaultTableModel) showResult.getModel();
        model.setRowCount(0);
        DataConnection dc = new DataConnection();
        //　何も入力してない場合
        if (key.isEmpty()) {
            query = "select*from yahooSearchResultNow  order by price DESC;";
            showMessage.setText("高い順です");

        } else {
            query = "select*from yahooSearchResultNow where keys ='" + key + "' order by price DESC;";
            showMessage.setText(key + " の高い順です");
        }
        ArrayList<DataNow> d = dc.getDataNow(query);
        if (d.isEmpty()) {
            showMessage.setText(key + "のデータはありません");
        } else {
            showDataToModel(d);
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void siteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siteActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_siteActionPerformed

    private void dataGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataGetActionPerformed

        GetSiteData gd = new GetSiteData();
        gd.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_dataGetActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        String key = searchKey.getText().trim();
        String query = null;
        //　検索するキーワードを変数keyにする
        DefaultTableModel model = (DefaultTableModel) showResult.getModel();
        model.setRowCount(0);
        DataConnection dc = new DataConnection();
        //　何も入力してない場合
        if (key.isEmpty()) {
            query = "select*from yahooSearchResultNow  order by price;";
            showMessage.setText("安い順です");

        } else {
            query = "select*from yahooSearchResultNow where keys ='" + key + "' order by price;";
            showMessage.setText(key + " の安い順です");
        }
        ArrayList<DataNow> d = dc.getDataNow(query);
        if (d.isEmpty()) {
            showMessage.setText(key + "のデータはありません");
        } else {
            showDataToModel(d);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void showAllDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllDataActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) showResult.getModel();
        model.setRowCount(0);
        showDataNow();
        searchKey.setText("");
    }//GEN-LAST:event_showAllDataActionPerformed

    private void historyDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyDataActionPerformed
        // TODO add your handling code here
        History h = new History();
        h.setVisible(true);
    }//GEN-LAST:event_historyDataActionPerformed

    private void showResultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showResultMouseClicked
        // TODO add your handling code here:
        // 選択された行をiに表示する
        int i = showResult.getSelectedRow();
        TableModel model = showResult.getModel();
        //　該当する欄に表示する
        showID.setText(model.getValueAt(i, 0).toString());
        showTitle.setText(model.getValueAt(i, 2).toString());
        showPrice.setText(model.getValueAt(i, 3).toString());
        showImg.setText(model.getValueAt(i, 4).toString());
        showCreateTime.setText(model.getValueAt(i, 5).toString());


    }//GEN-LAST:event_showResultMouseClicked

    private void deleteDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDataActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) showResult.getModel();
        if (showResult.getSelectedRows().length >= 1) {
            DataConnection dc = new DataConnection();
            int r = JOptionPane.showConfirmDialog(this, "削除したら戻せないです", "確認", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (r == JOptionPane.YES_OPTION) {
                int rows[] = showResult.getSelectedRows();
                for (int x = 0; x < rows.length; x++) {
                    Object id = model.getValueAt(rows[x], 0);
                    String query = "delete from yahooSearchResultNow where id ='" + id + "'";
                    dc.excuteSQLQuery(query);
                }
                model.setRowCount(0);
                searchKey.setText("");
                showDataNow();
                int count = rows.length;
                String message = count + "件のデータが削除しました";
                showMessage.setText(message);
            } else {

            }
        } else {
            showMessage.setText("削除するデータを選択してください");
        }


    }//GEN-LAST:event_deleteDataActionPerformed

    private void csvOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csvOutActionPerformed
        // TODO add your handling code here:
        JFileChooser jc = new JFileChooser();
        jc.showSaveDialog(null);
        File f = jc.getSelectedFile();
        String datas[] = null;
        DefaultTableModel model = (DefaultTableModel) showResult.getModel();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss ");
        String date = simpleDateFormat.format(new Date());
        try {
            Object data[] = model.getDataVector().toArray();
            if (!f.exists()) {
                FileWriter fw = new FileWriter(f, false);
                String title = model.getColumnName(0) + "," + model.getColumnName(1) + "," + model.getColumnName(2) + "," + model.getColumnName(3) + "," + model.getColumnName(4) + "," + model.getColumnName(5) + "," + model.getColumnName(6) + "," + date + "\n";
                fw.write(title);
                for (Object data1 : data) {
                    String line = data1.toString();
                    line = line.substring(1, line.length() - 1) + "\n";
                    System.out.println(line);
                    fw.write(line);
                }
                fw.close();
                showMessage.setText("データを出力しました");
            } else {
                int r = JOptionPane.showConfirmDialog(this, "同じ名前のデータがありますが，上書きしますか", "確認", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (r == JOptionPane.YES_OPTION) {
                    FileWriter fw = new FileWriter(f, false);
                    String title = model.getColumnName(0) + "," + model.getColumnName(1) + "," + model.getColumnName(2) + "," + model.getColumnName(3) + "," + model.getColumnName(4) + "," + model.getColumnName(5) + "," + model.getColumnName(6) + "," + date + "\n";
                    fw.write(title);
                    for (Object data1 : data) {
                        String line = data1.toString();
                        line = line.substring(1, line.length() - 1) + "\n";
                        System.out.println(line);
                        fw.write(line);
                    }
                    fw.close();
                    showMessage.setText("データを出力しました");

                } else {
                    showMessage.setText("キャンセルしました");

                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_csvOutActionPerformed
    public void showDataToModel(ArrayList<DataNow> data) {
        if (!data.isEmpty()) {
            DefaultTableModel model = (DefaultTableModel) showResult.getModel();
            Object[] row = new Object[6];
            //数列でデータをテーブルに入れる
            for (int i = 0; i < data.size(); i++) {
                row[0] = data.get(i).getId();

                row[1] = "yahooショッピング";

                row[4] = data.get(i).getImg();
                row[2] = data.get(i).getTitle();
                row[3] = data.get(i).getPrice();
                row[5] = data.get(i).getCreateTime();
                // 数列でテーブルに入れる
                model.addRow(row);
            }
        } else {
            showMessage.setText("該当するデータはありません");
            JOptionPane.showMessageDialog(this, "データはありません");
        }
    }

    /**
     * すべてのデータをテーブルに写す
     */
    public void showDataNow() {
        DefaultTableModel model = (DefaultTableModel) showResult.getModel();
        model.setRowCount(0);
        // listでデータを取得する
        DataConnection bc = new DataConnection();
        String query = "select * from yahooSearchResultNow;";
        ArrayList<DataNow> list = bc.getDataNow(query);
        if (!list.isEmpty()) {
            showDataToModel(list);
        } else {

        }
    }

    /**
     * 選択肢をリセットする
     */
    private void reFormatCombox() {
        site.removeAllItems();
        site.addItem("Yahooショッピング");
        site.addItem("アマゾン");
        site.addItem("楽天");
    }

    public String getkey() {
        return searchKey.getText();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowData.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowData.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowData.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowData.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton csvOut;
    private javax.swing.JButton dataGet;
    private javax.swing.JButton deleteData;
    private javax.swing.JButton historyData;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchKey;
    private javax.swing.JButton showAllData;
    private javax.swing.JLabel showCreateTime;
    private javax.swing.JLabel showID;
    private javax.swing.JLabel showImg;
    private javax.swing.JLabel showMessage;
    private javax.swing.JLabel showPrice;
    private javax.swing.JTable showResult;
    private javax.swing.JLabel showTitle;
    private javax.swing.JComboBox<String> site;
    private javax.swing.JLabel sizeSet;
    // End of variables declaration//GEN-END:variables
}
